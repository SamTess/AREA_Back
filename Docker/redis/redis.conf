# ============================================
# Redis Configuration - AREA Backend
# Security Hardened Configuration
# ============================================

# Bind to all interfaces within Docker network
# Redis is protected by Docker network isolation and password authentication
# Note: In Docker, we bind to 0.0.0.0 to allow other containers to connect
# External access is prevented by NOT exposing the port to the host
bind 0.0.0.0 ::

# Enable protected mode
# Prevents access from external networks when no password is set
protected-mode yes

# Require password authentication
# Password is set via environment variable
requirepass ${REDIS_PASSWORD}

# ============================================
# Security: Disable Dangerous Commands
# ============================================

# Prevent database destruction
rename-command FLUSHDB ""
rename-command FLUSHALL ""

# Prevent configuration changes
rename-command CONFIG ""

# Prevent debugging commands
rename-command DEBUG ""

# Prevent Lua script execution
rename-command EVAL ""
rename-command EVALSHA ""

# Prevent shutdown
rename-command SHUTDOWN ""

# Prevent key scanning (use SCAN instead)
# rename-command KEYS ""  # Commented out for backward compatibility

# ============================================
# Performance and Persistence
# ============================================

# Maximum memory policy
maxmemory 256mb
maxmemory-policy allkeys-lru

# Persistence - RDB Snapshots
save 900 1
save 300 10
save 60 10000

# AOF (Append Only File) for durability
appendonly yes
appendfilename "appendonly.aof"
appendfsync everysec

# ============================================
# Network and Connection Settings
# ============================================

# Maximum number of clients
maxclients 10000

# Timeout for idle clients (0 = disabled)
timeout 300

# TCP keepalive
tcp-keepalive 300

# ============================================
# Logging
# ============================================

# Log level: debug, verbose, notice, warning
loglevel notice

# Log file location (empty string = stdout)
logfile ""

# ============================================
# Slow Log Configuration
# ============================================

# Log queries slower than (microseconds)
slowlog-log-slower-than 10000

# Maximum slow log entries
slowlog-max-len 128

# ============================================
# Security: Additional Settings
# ============================================

# Disable replication if not needed
# repl-disable-tcp-nodelay no

# Enable keyspace notifications for monitoring (optional)
notify-keyspace-events ""

# ============================================
# TLS/SSL Configuration
# Enable TLS/SSL for secure communication
# ============================================

# Disable non-TLS port when TLS is enabled
# When TLS is enabled, set port to 0 to disable non-encrypted connections
# When TLS is disabled, the entrypoint script will set this to 6379
# port 0

# TLS port (default Redis port when TLS is enabled)
tls-port 6379

# Server certificate and key files
tls-cert-file /usr/local/etc/redis/certs/redis-cert.pem
tls-key-file /usr/local/etc/redis/certs/redis-key.pem

# CA certificate for client verification (optional but recommended)
tls-ca-cert-file /usr/local/etc/redis/certs/ca-cert.pem

# Client certificate authentication
# Set to "yes" to require client certificates (mutual TLS)
# Set to "optional" to allow both certificate and password auth
# Set to "no" to only use password auth over TLS
tls-auth-clients no

# TLS protocol versions (TLSv1.2 and TLSv1.3 recommended)
tls-protocols "TLSv1.2 TLSv1.3"

# Cipher suites (use strong ciphers only)
tls-ciphers DEFAULT:!MEDIUM:!LOW:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK:!RC4

# Prefer server cipher order
tls-prefer-server-ciphers yes

# Enable TLS for replication (if using replication)
tls-replication yes

# Enable TLS for cluster mode (if using cluster)
tls-cluster yes

# Session caching for better TLS performance
tls-session-caching yes
tls-session-cache-size 20480
tls-session-cache-timeout 300
