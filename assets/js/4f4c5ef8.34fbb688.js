"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[78],{3533:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"technical/authentication-authorization","title":"Authentication & Authorization System","description":"Table of Contents","source":"@site/docs/technical/02-authentication-authorization.md","sourceDirName":"technical","slug":"/technical/authentication-authorization","permalink":"/docs/technical/authentication-authorization","draft":false,"unlisted":false,"editUrl":"https://github.com/SamTess/AREA_Back/tree/main/docusaurus/docs/technical/02-authentication-authorization.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"AREA Backend Architecture Overview","permalink":"/docs/technical/architecture-overview"},"next":{"title":"Doxygen & Docusaurus Integration","permalink":"/docs/technical/doxygen-integration"}}');var r=i(4848),s=i(8453);const o={},l="Authentication & Authorization System",a={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Overview",id:"overview",level:2},{value:"Authentication Methods",id:"authentication-methods",level:2},{value:"1. Local Authentication",id:"1-local-authentication",level:3},{value:"2. OAuth2 Social Login",id:"2-oauth2-social-login",level:3},{value:"JWT Implementation",id:"jwt-implementation",level:2},{value:"Token Types",id:"token-types",level:3},{value:"JWT Service Implementation",id:"jwt-service-implementation",level:3},{value:"Token Structure",id:"token-structure",level:3},{value:"OAuth2 Integration",id:"oauth2-integration",level:2},{value:"GitHub OAuth Flow",id:"github-oauth-flow",level:3},{value:"Google OAuth Flow",id:"google-oauth-flow",level:3},{value:"OAuth Configuration",id:"oauth-configuration",level:3},{value:"Authorization Model",id:"authorization-model",level:2},{value:"User Roles",id:"user-roles",level:3},{value:"Permission Matrix",id:"permission-matrix",level:3},{value:"Security Filters",id:"security-filters",level:2},{value:"JWT Authentication Filter",id:"jwt-authentication-filter",level:3},{value:"Filter Chain Order",id:"filter-chain-order",level:3},{value:"Public Endpoints",id:"public-endpoints",level:3},{value:"Token Management",id:"token-management",level:2},{value:"Redis Token Storage",id:"redis-token-storage",level:3},{value:"Token Rotation",id:"token-rotation",level:3},{value:"Token Security Features",id:"token-security-features",level:3},{value:"Session Management",id:"session-management",level:2},{value:"Cookie Configuration",id:"cookie-configuration",level:3},{value:"Environment-based Configuration",id:"environment-based-configuration",level:3},{value:"Security Best Practices",id:"security-best-practices",level:2},{value:"Implemented",id:"implemented",level:3},{value:"Planned Enhancements",id:"planned-enhancements",level:3},{value:"Authentication Flow Diagrams",id:"authentication-flow-diagrams",level:2},{value:"Local Login Flow",id:"local-login-flow",level:3},{value:"OAuth2 Flow",id:"oauth2-flow",level:3},{value:"API Endpoints",id:"api-endpoints",level:2},{value:"Authentication Endpoints",id:"authentication-endpoints",level:3},{value:"OAuth Endpoints",id:"oauth-endpoints",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Authentication Errors",id:"authentication-errors",level:3},{value:"Token Errors",id:"token-errors",level:3},{value:"Testing",id:"testing",level:2},{value:"Unit Tests",id:"unit-tests",level:3},{value:"Integration Tests",id:"integration-tests",level:3},{value:"Configuration Reference",id:"configuration-reference",level:2},{value:"Required Environment Variables",id:"required-environment-variables",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"authentication--authorization-system",children:"Authentication & Authorization System"})}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#overview",children:"Overview"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#authentication-methods",children:"Authentication Methods"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#jwt-implementation",children:"JWT Implementation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#oauth2-integration",children:"OAuth2 Integration"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#authorization-model",children:"Authorization Model"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#security-filters",children:"Security Filters"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#token-management",children:"Token Management"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#session-management",children:"Session Management"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The AREA backend implements a comprehensive authentication and authorization system supporting multiple authentication methods including local username/password authentication and OAuth2 social login providers."}),"\n",(0,r.jsx)(n.h2,{id:"authentication-methods",children:"Authentication Methods"}),"\n",(0,r.jsx)(n.h3,{id:"1-local-authentication",children:"1. Local Authentication"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Implementation"}),": ",(0,r.jsx)(n.code,{children:"AuthService.java"})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Email/password-based authentication"}),"\n",(0,r.jsx)(n.li,{children:"BCrypt password hashing"}),"\n",(0,r.jsx)(n.li,{children:"Account lockout after failed attempts"}),"\n",(0,r.jsx)(n.li,{children:"Email verification support (future enhancement)"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"@Service\npublic class AuthService {\n    // Local login with email/password\n    public AuthResponse login(LocalLoginRequest request, HttpServletResponse response)\n    \n    // User registration\n    public AuthResponse register(RegisterRequest request, HttpServletResponse response)\n    \n    // Token refresh\n    public AuthResponse refreshToken(String refreshToken, HttpServletResponse response)\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-oauth2-social-login",children:"2. OAuth2 Social Login"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Supported Providers"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["GitHub (",(0,r.jsx)(n.code,{children:"OAuthGithubService.java"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["Google (",(0,r.jsx)(n.code,{children:"OAuthGoogleService.java"}),")"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Implementation"}),": Abstract ",(0,r.jsx)(n.code,{children:"OAuthService.java"})," base class"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'public abstract class OAuthService {\n    protected final String providerKey;     // "github", "google"\n    protected final String clientId;\n    protected final String clientSecret;\n    \n    // Abstract method for provider-specific authentication\n    public abstract AuthResponse authenticate(OAuthLoginRequest request, HttpServletResponse response);\n    \n    // Common token cookie management\n    protected void setTokenCookies(HttpServletResponse response, String accessToken, String refreshToken);\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"jwt-implementation",children:"JWT Implementation"}),"\n",(0,r.jsx)(n.h3,{id:"token-types",children:"Token Types"}),"\n",(0,r.jsx)(n.p,{children:"The system uses two types of JWT tokens:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Access Token"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Lifetime: 15 minutes (configurable)"}),"\n",(0,r.jsx)(n.li,{children:"Used for API authentication"}),"\n",(0,r.jsx)(n.li,{children:"Stored in HTTP-only cookie"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Refresh Token"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Lifetime: 7 days (configurable)"}),"\n",(0,r.jsx)(n.li,{children:"Used to obtain new access tokens"}),"\n",(0,r.jsx)(n.li,{children:"Stored in HTTP-only cookie"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"jwt-service-implementation",children:"JWT Service Implementation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"@Service\npublic class JwtService {\n    // Token generation\n    public String generateAccessToken(UUID userId)\n    public String generateRefreshToken(UUID userId)\n    \n    // Token validation\n    public boolean isAccessTokenValid(String token, UUID userId)\n    public boolean isRefreshTokenValid(String token, UUID userId)\n    \n    // Claims extraction\n    public UUID extractUserIdFromAccessToken(String token)\n    public UUID extractUserIdFromRefreshToken(String token)\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"token-structure",children:"Token Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "sub": "user-uuid",\n  "iat": 1633024800,\n  "exp": 1633025700,\n  "type": "access_token"\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"oauth2-integration",children:"OAuth2 Integration"}),"\n",(0,r.jsx)(n.h3,{id:"github-oauth-flow",children:"GitHub OAuth Flow"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Authorization URL Generation"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /api/oauth/github/authorize\n\u2192 Redirects to GitHub OAuth\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Token Exchange"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'POST /api/oauth/github/exchange\n{\n  "code": "authorization_code_from_github"\n}\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"User Data Retrieval"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Fetch user profile from GitHub API"}),"\n",(0,r.jsx)(n.li,{children:"Create or update user account"}),"\n",(0,r.jsx)(n.li,{children:"Generate JWT tokens"}),"\n",(0,r.jsx)(n.li,{children:"Set authentication cookies"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"google-oauth-flow",children:"Google OAuth Flow"}),"\n",(0,r.jsx)(n.p,{children:"Similar to GitHub but with Google-specific endpoints and scopes."}),"\n",(0,r.jsx)(n.h3,{id:"oauth-configuration",children:"OAuth Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-properties",children:"# GitHub OAuth2 Configuration\nspring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}\nspring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}\n\n# Google OAuth2 Configuration\nspring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}\nspring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"authorization-model",children:"Authorization Model"}),"\n",(0,r.jsx)(n.h3,{id:"user-roles",children:"User Roles"}),"\n",(0,r.jsx)(n.p,{children:"The system implements a simple role-based access control:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Regular User"}),": Standard application access"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Admin User"}),": Full system access (future enhancement)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"permission-matrix",children:"Permission Matrix"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Resource"}),(0,r.jsx)(n.th,{children:"Create"}),(0,r.jsx)(n.th,{children:"Read"}),(0,r.jsx)(n.th,{children:"Update"}),(0,r.jsx)(n.th,{children:"Delete"}),(0,r.jsx)(n.th,{children:"Admin Only"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Areas"}),(0,r.jsx)(n.td,{children:"Own"}),(0,r.jsx)(n.td,{children:"Own"}),(0,r.jsx)(n.td,{children:"Own"}),(0,r.jsx)(n.td,{children:"Own"}),(0,r.jsx)(n.td,{children:"All"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Services"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"All"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"No"}),(0,r.jsx)(n.td,{children:"Yes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Users"}),(0,r.jsx)(n.td,{children:"Self"}),(0,r.jsx)(n.td,{children:"Self"}),(0,r.jsx)(n.td,{children:"Self"}),(0,r.jsx)(n.td,{children:"Self"}),(0,r.jsx)(n.td,{children:"All"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"security-filters",children:"Security Filters"}),"\n",(0,r.jsx)(n.h3,{id:"jwt-authentication-filter",children:"JWT Authentication Filter"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Class"}),": ",(0,r.jsx)(n.code,{children:"JwtAuthenticationFilter.java"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"@Component\npublic class JwtAuthenticationFilter extends OncePerRequestFilter {\n    @Override\n    protected void doFilterInternal(HttpServletRequest request, \n                                   HttpServletResponse response, \n                                   FilterChain filterChain) {\n        // 1. Extract JWT from cookies\n        // 2. Validate token with Redis\n        // 3. Verify JWT signature and claims\n        // 4. Set Spring Security context\n        // 5. Continue filter chain\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"filter-chain-order",children:"Filter Chain Order"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"1. CorsFilter (Spring Security)\n2. JwtAuthenticationFilter (Custom)\n3. UsernamePasswordAuthenticationFilter (Spring Security)\n4. ... other Spring Security filters\n"})}),"\n",(0,r.jsx)(n.h3,{id:"public-endpoints",children:"Public Endpoints"}),"\n",(0,r.jsx)(n.p,{children:"No authentication required:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/api/auth/**"})," - Authentication endpoints"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/api/oauth/**"})," - OAuth endpoints"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/swagger-ui/**"})," - API documentation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/actuator/health"})," - Health checks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"/api/about/**"})," - System information"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"token-management",children:"Token Management"}),"\n",(0,r.jsx)(n.h3,{id:"redis-token-storage",children:"Redis Token Storage"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Service"}),": ",(0,r.jsx)(n.code,{children:"RedisTokenService.java"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"@Service\npublic class RedisTokenService {\n    // Store valid tokens\n    public void storeAccessToken(String token, UUID userId, Duration expiry)\n    public void storeRefreshToken(String token, UUID userId, Duration expiry)\n    \n    // Validate tokens\n    public boolean isAccessTokenValid(String token)\n    public boolean isRefreshTokenValid(String token)\n    \n    // Revoke tokens (logout)\n    public void revokeAccessToken(String token)\n    public void revokeRefreshToken(String token)\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"token-rotation",children:"Token Rotation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Access tokens are rotated every 15 minutes"}),"\n",(0,r.jsx)(n.li,{children:"Refresh tokens are rotated on each use (sliding window)"}),"\n",(0,r.jsx)(n.li,{children:"Old tokens are blacklisted in Redis"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"token-security-features",children:"Token Security Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"HTTP-only cookies"}),": Prevent XSS attacks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Secure flag"}),": HTTPS-only in production"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SameSite"}),": CSRF protection"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Domain restriction"}),": Cookie scope limitation"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"session-management",children:"Session Management"}),"\n",(0,r.jsx)(n.h3,{id:"cookie-configuration",children:"Cookie Configuration"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Class"}),": ",(0,r.jsx)(n.code,{children:"JwtCookieProperties.java"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'@ConfigurationProperties(prefix = "app.jwt.cookie")\npublic class JwtCookieProperties {\n    private boolean secure = false;           // HTTPS only\n    private String sameSite = "Strict";       // CSRF protection\n    private String domain;                    // Cookie domain\n    private int accessTokenExpiry = 86400;   // 24 hours\n    private int refreshTokenExpiry = 604800; // 7 days\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"environment-based-configuration",children:"Environment-based Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-properties",children:"# Development\napp.jwt.cookie.secure=false\napp.jwt.cookie.same-site=Strict\n\n# Production\napp.jwt.cookie.secure=true\napp.jwt.cookie.same-site=Strict\napp.jwt.cookie.domain=yourdomain.com\n"})}),"\n",(0,r.jsx)(n.h2,{id:"security-best-practices",children:"Security Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"implemented",children:"Implemented"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 JWT tokens in HTTP-only cookies"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Token rotation and blacklisting"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 BCrypt password hashing"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 CORS configuration"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Account lockout after failed attempts"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 SQL injection prevention (JPA)"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Input validation"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"planned-enhancements",children:"Planned Enhancements"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\ud83d\udd04 Rate limiting"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udd04 Email verification"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udd04 Two-factor authentication"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udd04 Password complexity requirements"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udd04 Audit logging"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"authentication-flow-diagrams",children:"Authentication Flow Diagrams"}),"\n",(0,r.jsx)(n.h3,{id:"local-login-flow",children:"Local Login Flow"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mermaid",children:"sequenceDiagram\n    participant C as Client\n    participant AC as AuthController\n    participant AS as AuthService\n    participant JS as JwtService\n    participant RTS as RedisTokenService\n    participant DB as Database\n\n    C->>AC: POST /api/auth/login\n    AC->>AS: login(credentials)\n    AS->>DB: validate user\n    AS->>JS: generateTokens(userId)\n    JS->>RTS: storeTokens(tokens)\n    AS->>AC: AuthResponse + cookies\n    AC->>C: Response with JWT cookies\n"})}),"\n",(0,r.jsx)(n.h3,{id:"oauth2-flow",children:"OAuth2 Flow"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mermaid",children:"sequenceDiagram\n    participant C as Client\n    participant OC as OAuthController\n    participant OS as OAuthService\n    participant GP as GitHub/Google\n    participant DB as Database\n\n    C->>OC: GET /oauth/github/authorize\n    OC->>C: Redirect to GitHub\n    C->>GP: User authorizes\n    GP->>C: Redirect with code\n    C->>OC: POST /oauth/github/exchange {code}\n    OC->>OS: authenticate(code)\n    OS->>GP: Exchange code for token\n    OS->>GP: Fetch user profile\n    OS->>DB: Create/update user\n    OS->>OC: AuthResponse + cookies\n    OC->>C: Response with JWT cookies\n"})}),"\n",(0,r.jsx)(n.h2,{id:"api-endpoints",children:"API Endpoints"}),"\n",(0,r.jsx)(n.h3,{id:"authentication-endpoints",children:"Authentication Endpoints"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-http",children:"POST /api/auth/register\nPOST /api/auth/login\nPOST /api/auth/logout\nPOST /api/auth/refresh\nGET  /api/auth/me\n"})}),"\n",(0,r.jsx)(n.h3,{id:"oauth-endpoints",children:"OAuth Endpoints"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-http",children:"GET  /api/oauth/providers\nGET  /api/oauth/{provider}/authorize\nPOST /api/oauth/{provider}/exchange\n"})}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.h3,{id:"authentication-errors",children:"Authentication Errors"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"401 Unauthorized"}),": Invalid credentials"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"403 Forbidden"}),": Account locked"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"422 Unprocessable Entity"}),": Validation errors"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"token-errors",children:"Token Errors"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"401 Unauthorized"}),": Invalid or expired token"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"403 Forbidden"}),": Token revoked or blacklisted"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsx)(n.h3,{id:"unit-tests",children:"Unit Tests"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"AuthServiceTest.java"}),": Authentication logic"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"JwtServiceTest.java"}),": Token operations"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"OAuthServiceTest.java"}),": OAuth integration"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"integration-tests",children:"Integration Tests"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"AuthControllerTest.java"}),": API endpoint testing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"SecurityConfigTest.java"}),": Security configuration"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configuration-reference",children:"Configuration Reference"}),"\n",(0,r.jsx)(n.h3,{id:"required-environment-variables",children:"Required Environment Variables"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# JWT Configuration\nJWT_ACCESS_SECRET=your-access-token-secret\nJWT_REFRESH_SECRET=your-refresh-token-secret\n\n# OAuth2 Configuration\nGITHUB_CLIENT_ID=your-github-client-id\nGITHUB_CLIENT_SECRET=your-github-client-secret\nGOOGLE_CLIENT_ID=your-google-client-id\nGOOGLE_CLIENT_SECRET=your-google-client-secret\n\n# Redis Configuration\nREDIS_HOST=localhost\nREDIS_PORT=6379\nREDIS_PASSWORD=your-redis-password\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var t=i(6540);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);