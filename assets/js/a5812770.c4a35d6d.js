"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[8244],{7180:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"guides/area-creation-api","title":"AREA Creation API Implementation","description":"Overview","source":"@site/docs/guides/area-creation-api.md","sourceDirName":"guides","slug":"/guides/area-creation-api","permalink":"/docs/guides/area-creation-api","draft":false,"unlisted":false,"editUrl":"https://github.com/SamTess/AREA_Back/tree/main/docusaurus/docs/guides/area-creation-api.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Guides","permalink":"/docs/category/guides"},"next":{"title":"Checkstyle Guide","permalink":"/docs/guides/checkstyle-guide"}}');var a=i(4848),r=i(8453);const t={},o="AREA Creation API Implementation",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Features Implemented",id:"features-implemented",level:2},{value:"1. Enhanced AREA Entity",id:"1-enhanced-area-entity",level:3},{value:"2. New DTOs",id:"2-new-dtos",level:3},{value:"3. JSON Schema Validation",id:"3-json-schema-validation",level:3},{value:"4. Business Logic Service",id:"4-business-logic-service",level:3},{value:"5. Enhanced Controller",id:"5-enhanced-controller",level:3},{value:"6. Database Migration",id:"6-database-migration",level:3},{value:"API Usage",id:"api-usage",level:2},{value:"Creating an AREA with Actions and Reactions",id:"creating-an-area-with-actions-and-reactions",level:3},{value:"Response",id:"response",level:3},{value:"Validation Rules",id:"validation-rules",level:2},{value:"Area Level",id:"area-level",level:3},{value:"Action Level",id:"action-level",level:3},{value:"Reaction Level",id:"reaction-level",level:3},{value:"Activation Modes for Reactions",id:"activation-modes-for-reactions",level:2},{value:"CHAIN (Default)",id:"chain-default",level:3},{value:"CRON",id:"cron",level:3},{value:"MANUAL",id:"manual",level:3},{value:"Error Responses",id:"error-responses",level:2},{value:"400 Bad Request - Validation Error",id:"400-bad-request---validation-error",level:3},{value:"404 Not Found - Resource Not Found",id:"404-not-found---resource-not-found",level:3},{value:"500 Internal Server Error",id:"500-internal-server-error",level:3},{value:"Database Schema Changes",id:"database-schema-changes",level:2},{value:"Testing",id:"testing",level:2},{value:"Future Enhancements",id:"future-enhancements",level:2},{value:"Notes",id:"notes",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"area-creation-api-implementation",children:"AREA Creation API Implementation"})}),"\n",(0,a.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsxs)(n.p,{children:["This implementation adds a new API endpoint ",(0,a.jsx)(n.code,{children:"/api/areas/with-actions"})," that allows creating AREA automations with actions and reactions in a single request. The implementation includes JSON schema validation and JSONB storage for flexibility."]}),"\n",(0,a.jsx)(n.h2,{id:"features-implemented",children:"Features Implemented"}),"\n",(0,a.jsx)(n.h3,{id:"1-enhanced-area-entity",children:"1. Enhanced AREA Entity"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Added JSONB columns ",(0,a.jsx)(n.code,{children:"actions"})," and ",(0,a.jsx)(n.code,{children:"reactions"})," to store action/reaction configurations"]}),"\n",(0,a.jsx)(n.li,{children:"Maintains backward compatibility with existing basic AREA creation"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"2-new-dtos",children:"2. New DTOs"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"CreateAreaWithActionsRequest"}),": Main request DTO for AREA creation"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"AreaActionRequest"}),": DTO for action (trigger) configuration"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"AreaReactionRequest"}),": DTO for reaction configuration"]}),"\n",(0,a.jsxs)(n.li,{children:["Enhanced ",(0,a.jsx)(n.code,{children:"AreaResponse"}),": Now includes actions and reactions in the response"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"3-json-schema-validation",children:"3. JSON Schema Validation"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"JsonSchemaValidationService"}),": Service for validating parameters against JSON schemas"]}),"\n",(0,a.jsx)(n.li,{children:"Validates action/reaction parameters against their respective action definition schemas"}),"\n",(0,a.jsx)(n.li,{children:"Provides proper error messages for validation failures"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"4-business-logic-service",children:"4. Business Logic Service"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"AreaService"}),": Handles AREA creation business logic"]}),"\n",(0,a.jsx)(n.li,{children:"Validates action definitions (triggers must be event capable, reactions must be executable)"}),"\n",(0,a.jsx)(n.li,{children:"Creates action instances for both actions and reactions"}),"\n",(0,a.jsx)(n.li,{children:"Validates service accounts if provided"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"5-enhanced-controller",children:"5. Enhanced Controller"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["New endpoint ",(0,a.jsx)(n.code,{children:"POST /api/areas/with-actions"})," for creating AREA with actions/reactions"]}),"\n",(0,a.jsxs)(n.li,{children:["Maintains existing ",(0,a.jsx)(n.code,{children:"POST /api/areas"})," for basic AREA creation"]}),"\n",(0,a.jsx)(n.li,{children:"Proper error handling and HTTP status codes"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"6-database-migration",children:"6. Database Migration"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"V2__Add_jsonb_actions_reactions_to_areas.sql"}),": Adds JSONB columns to existing areas table"]}),"\n",(0,a.jsx)(n.li,{children:"Includes GIN indexes for efficient JSON querying"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"api-usage",children:"API Usage"}),"\n",(0,a.jsx)(n.h3,{id:"creating-an-area-with-actions-and-reactions",children:"Creating an AREA with Actions and Reactions"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-http",children:'POST /api/areas/with-actions\nContent-Type: application/json\n\n{\n  "name": "GitHub to Slack Notification",\n  "description": "Send Slack notification when GitHub issue is created",\n  "userId": "12345678-1234-1234-1234-123456789abc",\n  "actions": [\n    {\n      "actionDefinitionId": "87654321-4321-4321-4321-cba987654321",\n      "name": "GitHub Issue Created",\n      "description": "Triggers when a new issue is created",\n      "parameters": {\n        "repository": "my-org/my-repo",\n        "labels": ["bug", "urgent"]\n      },\n      "activationConfig": {\n        "type": "webhook",\n        "path": "/webhooks/github/issues"\n      },\n      "serviceAccountId": "11111111-1111-1111-1111-111111111111"\n    }\n  ],\n  "reactions": [\n    {\n      "actionDefinitionId": "22222222-2222-2222-2222-222222222222",\n      "name": "Send Slack Message",\n      "description": "Posts message to Slack channel",\n      "parameters": {\n        "channel": "#development",\n        "message": "New issue created: {{issue.title}}"\n      },\n      "mapping": {\n        "issue.title": "title",\n        "issue.url": "url"\n      },\n      "condition": {\n        "operator": "and",\n        "conditions": [\n          {\n            "field": "issue.state",\n            "operator": "equals",\n            "value": "open"\n          }\n        ]\n      },\n      "order": 1,\n      "serviceAccountId": "33333333-3333-3333-3333-333333333333",\n      "activationConfig": {\n        "type": "chain"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"response",children:"Response"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "id": "abcdef12-3456-7890-abcd-ef1234567890",\n  "name": "GitHub to Slack Notification",\n  "description": "Send Slack notification when GitHub issue is created",\n  "enabled": true,\n  "userId": "12345678-1234-1234-1234-123456789abc",\n  "userEmail": "user@example.com",\n  "actions": [\n    {\n      "actionDefinitionId": "87654321-4321-4321-4321-cba987654321",\n      "name": "GitHub Issue Created",\n      "description": "Triggers when a new issue is created",\n      "parameters": {\n        "repository": "my-org/my-repo",\n        "labels": ["bug", "urgent"]\n      },\n      "activationConfig": {\n        "type": "webhook",\n        "path": "/webhooks/github/issues"\n      },\n      "serviceAccountId": "11111111-1111-1111-1111-111111111111"\n    }\n  ],\n  "reactions": [\n    {\n      "actionDefinitionId": "22222222-2222-2222-2222-222222222222",\n      "name": "Send Slack Message",\n      "description": "Posts message to Slack channel",\n      "parameters": {\n        "channel": "#development",\n        "message": "New issue created: {{issue.title}}"\n      },\n      "mapping": {\n        "issue.title": "title",\n        "issue.url": "url"\n      },\n      "condition": {\n        "operator": "and",\n        "conditions": [\n          {\n            "field": "issue.state",\n            "operator": "equals",\n            "value": "open"\n          }\n        ]\n      },\n      "order": 1,\n      "serviceAccountId": "33333333-3333-3333-3333-333333333333"\n    }\n  ],\n  "createdAt": "2025-10-06T10:30:00Z",\n  "updatedAt": "2025-10-06T10:30:00Z"\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"validation-rules",children:"Validation Rules"}),"\n",(0,a.jsx)(n.h3,{id:"area-level",children:"Area Level"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Name is required and must not be blank"}),"\n",(0,a.jsx)(n.li,{children:"User ID is required and user must exist"}),"\n",(0,a.jsx)(n.li,{children:"At least one action is required"}),"\n",(0,a.jsx)(n.li,{children:"At least one reaction is required"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"action-level",children:"Action Level"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Action definition ID is required and must exist"}),"\n",(0,a.jsxs)(n.li,{children:["Action definition must be event capable (",(0,a.jsx)(n.code,{children:"isEventCapable = true"}),")"]}),"\n",(0,a.jsx)(n.li,{children:"Name is required and must not be blank"}),"\n",(0,a.jsx)(n.li,{children:"Parameters must conform to the action definition's input schema"}),"\n",(0,a.jsx)(n.li,{children:"Service account ID (if provided) must exist and match the service"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"reaction-level",children:"Reaction Level"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Action definition ID is required and must exist"}),"\n",(0,a.jsxs)(n.li,{children:["Action definition must be executable (",(0,a.jsx)(n.code,{children:"isExecutable = true"}),")"]}),"\n",(0,a.jsx)(n.li,{children:"Name is required and must not be blank"}),"\n",(0,a.jsx)(n.li,{children:"Parameters must conform to the action definition's input schema"}),"\n",(0,a.jsx)(n.li,{children:"Service account ID (if provided) must exist and match the service"}),"\n",(0,a.jsx)(n.li,{children:"Order defaults to 0 if not provided"}),"\n",(0,a.jsx)(n.li,{children:"Activation config is optional; if not provided, defaults to CHAIN mode"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"activation-modes-for-reactions",children:"Activation Modes for Reactions"}),"\n",(0,a.jsx)(n.p,{children:"Reactions support three activation modes:"}),"\n",(0,a.jsx)(n.h3,{id:"chain-default",children:"CHAIN (Default)"}),"\n",(0,a.jsx)(n.p,{children:"Triggered by completed trigger actions within the same AREA:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "activationConfig": {\n    "type": "chain"\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"cron",children:"CRON"}),"\n",(0,a.jsx)(n.p,{children:"Executed on a schedule using cron expressions:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "activationConfig": {\n    "type": "cron",\n    "cron_expression": "0 */6 * * *"\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"manual",children:"MANUAL"}),"\n",(0,a.jsx)(n.p,{children:"Only executed when manually triggered:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "activationConfig": {\n    "type": "manual"\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"error-responses",children:"Error Responses"}),"\n",(0,a.jsx)(n.h3,{id:"400-bad-request---validation-error",children:"400 Bad Request - Validation Error"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Validation failed",\n  "message": "Required parameter \'repository\' is missing"\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"404-not-found---resource-not-found",children:"404 Not Found - Resource Not Found"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Validation failed",\n  "message": "User not found with ID: 12345678-1234-1234-1234-123456789abc"\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"500-internal-server-error",children:"500 Internal Server Error"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "error": "Internal server error",\n  "message": "An unexpected error occurred"\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"database-schema-changes",children:"Database Schema Changes"}),"\n",(0,a.jsxs)(n.p,{children:["The implementation adds two new JSONB columns to the ",(0,a.jsx)(n.code,{children:"a_areas"})," table:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"ALTER TABLE area.a_areas \nADD COLUMN IF NOT EXISTS actions jsonb,\nADD COLUMN IF NOT EXISTS reactions jsonb;\n\n-- Indexes for performance\nCREATE INDEX IF NOT EXISTS idx_areas_actions ON area.a_areas USING gin(actions);\nCREATE INDEX IF NOT EXISTS idx_areas_reactions ON area.a_areas USING gin(reactions);\n"})}),"\n",(0,a.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,a.jsx)(n.p,{children:"The implementation includes comprehensive unit tests covering:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Successful AREA creation with actions and reactions"}),"\n",(0,a.jsx)(n.li,{children:"Validation errors for missing users"}),"\n",(0,a.jsx)(n.li,{children:"Validation errors for missing action definitions"}),"\n",(0,a.jsx)(n.li,{children:"JSON schema validation"}),"\n",(0,a.jsx)(n.li,{children:"Service account validation"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"future-enhancements",children:"Future Enhancements"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Enhanced JSON Schema Validation"}),": Implement full JSON Schema library support for more complex validation rules"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Action Ordering"}),": Add support for ordering actions within an AREA"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Conditional Logic"}),": Enhance condition evaluation for more complex workflows"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Template Support"}),": Add support for template variables in reaction parameters"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Bulk Operations"}),": Support for creating multiple AREAs in a single request"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"The implementation maintains backward compatibility with existing AREA creation"}),"\n",(0,a.jsx)(n.li,{children:"JSONB storage provides flexibility for storing complex action/reaction configurations"}),"\n",(0,a.jsx)(n.li,{children:"Action instances are automatically created for both actions and reactions"}),"\n",(0,a.jsx)(n.li,{children:"The design supports future extensions without breaking changes"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(6540);const a={},r=s.createContext(a);function t(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);