"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[5656],{1982:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>_,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"technical/database-schema","title":"Database Schema Documentation","description":"Table of Contents","source":"@site/docs/technical/05-database-schema.md","sourceDirName":"technical","slug":"/technical/database-schema","permalink":"/docs/technical/database-schema","draft":false,"unlisted":false,"editUrl":"https://github.com/SamTess/AREA_Back/tree/main/docusaurus/docs/technical/05-database-schema.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Service Integration Architecture","permalink":"/docs/technical/service-integration"},"next":{"title":"API Documentation Guide","permalink":"/docs/technical/api-documentation"}}');var t=a(4848),s=a(8453);const r={},c="Database Schema Documentation",d={},o=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Overview",id:"overview",level:2},{value:"Schema Design Principles",id:"schema-design-principles",level:2},{value:"1. Modularity",id:"1-modularity",level:3},{value:"2. Scalability",id:"2-scalability",level:3},{value:"3. Data Integrity",id:"3-data-integrity",level:3},{value:"4. Security",id:"4-security",level:3},{value:"Database Configuration",id:"database-configuration",level:2},{value:"Connection Configuration",id:"connection-configuration",level:3},{value:"Database Connection Pool",id:"database-connection-pool",level:3},{value:"Core Tables",id:"core-tables",level:2},{value:"Users Table (<code>a_users</code>)",id:"users-table-a_users",level:3},{value:"Services Table (<code>a_services</code>)",id:"services-table-a_services",level:3},{value:"Areas Table (<code>a_areas</code>)",id:"areas-table-a_areas",level:3},{value:"Action Definitions Table (<code>a_action_definitions</code>)",id:"action-definitions-table-a_action_definitions",level:3},{value:"Action Instances Table (<code>a_action_instances</code>)",id:"action-instances-table-a_action_instances",level:3},{value:"Security Tables",id:"security-tables",level:2},{value:"User Local Identities (<code>a_user_local_identities</code>)",id:"user-local-identities-a_user_local_identities",level:3},{value:"User OAuth Identities (<code>a_user_oauth_identities</code>)",id:"user-oauth-identities-a_user_oauth_identities",level:3},{value:"Service Accounts (<code>a_service_accounts</code>)",id:"service-accounts-a_service_accounts",level:3},{value:"Execution Tables",id:"execution-tables",level:2},{value:"Executions Table (<code>a_executions</code>)",id:"executions-table-a_executions",level:3},{value:"Activation Modes Table (<code>a_activation_modes</code>)",id:"activation-modes-table-a_activation_modes",level:3},{value:"Action Links Table (<code>a_action_links</code>)",id:"action-links-table-a_action_links",level:3},{value:"Indexes and Performance",id:"indexes-and-performance",level:2},{value:"Primary Indexes",id:"primary-indexes",level:3},{value:"Foreign Key Indexes",id:"foreign-key-indexes",level:3},{value:"JSONB Indexes",id:"jsonb-indexes",level:3},{value:"Composite Indexes",id:"composite-indexes",level:3},{value:"Performance Optimization Strategies",id:"performance-optimization-strategies",level:3},{value:"Query Optimization",id:"query-optimization",level:4},{value:"Connection Pool Tuning",id:"connection-pool-tuning",level:4},{value:"Migration Strategy",id:"migration-strategy",level:2},{value:"Flyway Configuration",id:"flyway-configuration",level:3},{value:"Migration Best Practices",id:"migration-best-practices",level:3},{value:"Example Migration",id:"example-migration",level:3},{value:"Data Types",id:"data-types",level:2},{value:"UUID Usage",id:"uuid-usage",level:3},{value:"JSONB Usage",id:"jsonb-usage",level:3},{value:"Timestamp Usage",id:"timestamp-usage",level:3},{value:"Text vs VARCHAR",id:"text-vs-varchar",level:3},{value:"Database Functions",id:"database-functions",level:2},{value:"Utility Functions",id:"utility-functions",level:3},{value:"Triggers",id:"triggers",level:3},{value:"Monitoring and Maintenance",id:"monitoring-and-maintenance",level:2},{value:"Query Performance Monitoring",id:"query-performance-monitoring",level:3},{value:"Index Usage Analysis",id:"index-usage-analysis",level:3},{value:"Database Size Monitoring",id:"database-size-monitoring",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"database-schema-documentation",children:"Database Schema Documentation"})}),"\n",(0,t.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#overview",children:"Overview"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#schema-design-principles",children:"Schema Design Principles"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#database-configuration",children:"Database Configuration"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#core-tables",children:"Core Tables"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#security-tables",children:"Security Tables"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#execution-tables",children:"Execution Tables"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#indexes-and-performance",children:"Indexes and Performance"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#migration-strategy",children:"Migration Strategy"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#data-types",children:"Data Types"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"The AREA backend uses PostgreSQL 13+ as the primary database with a schema designed for scalability, flexibility, and maintainability. The schema follows a modular approach with clear separation between user management, service integration, automation logic, and execution tracking."}),"\n",(0,t.jsx)(n.h2,{id:"schema-design-principles",children:"Schema Design Principles"}),"\n",(0,t.jsx)(n.h3,{id:"1-modularity",children:"1. Modularity"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Dedicated schema namespace (",(0,t.jsx)(n.code,{children:"area"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"Logical grouping of related tables"}),"\n",(0,t.jsxs)(n.li,{children:["Clear table naming conventions (",(0,t.jsx)(n.code,{children:"a_"})," prefix)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"2-scalability",children:"2. Scalability"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"UUID primary keys for horizontal scaling"}),"\n",(0,t.jsx)(n.li,{children:"JSONB columns for flexible schema evolution"}),"\n",(0,t.jsx)(n.li,{children:"Efficient indexing strategy"}),"\n",(0,t.jsx)(n.li,{children:"Audit trails for all major entities"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-data-integrity",children:"3. Data Integrity"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Foreign key constraints"}),"\n",(0,t.jsx)(n.li,{children:"Check constraints for data validation"}),"\n",(0,t.jsx)(n.li,{children:"NOT NULL constraints where appropriate"}),"\n",(0,t.jsx)(n.li,{children:"Unique constraints for business rules"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"4-security",children:"4. Security"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Encrypted sensitive data storage"}),"\n",(0,t.jsx)(n.li,{children:"Audit trails with timestamps"}),"\n",(0,t.jsx)(n.li,{children:"Soft delete patterns where needed"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"database-configuration",children:"Database Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"connection-configuration",children:"Connection Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"# Database Configuration\nspring.datasource.url=${DATABASE_URL}\nspring.datasource.username=${DATABASE_USERNAME}\nspring.datasource.password=${DATABASE_PASSWORD}\nspring.datasource.driver-class-name=org.postgresql.Driver\n\n# JPA Configuration\nspring.jpa.hibernate.ddl-auto=none\nspring.jpa.show-sql=false\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect\nspring.jpa.properties.hibernate.format_sql=false\n\n# Flyway Configuration\nspring.flyway.enabled=true\nspring.flyway.locations=classpath:db/migration\nspring.flyway.baseline-on-migrate=true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"database-connection-pool",children:"Database Connection Pool"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# HikariCP Configuration (implicit with Spring Boot)\nspring:\n  datasource:\n    hikari:\n      maximum-pool-size: 20\n      minimum-idle: 5\n      idle-timeout: 300000\n      max-lifetime: 1200000\n      connection-timeout: 20000\n"})}),"\n",(0,t.jsx)(n.h2,{id:"core-tables",children:"Core Tables"}),"\n",(0,t.jsxs)(n.h3,{id:"users-table-a_users",children:["Users Table (",(0,t.jsx)(n.code,{children:"a_users"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE area.a_users (\n    id               uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n    email            citext UNIQUE NOT NULL,\n    is_active        boolean NOT NULL DEFAULT true,\n    is_admin         boolean NOT NULL DEFAULT false,\n    created_at       timestamptz NOT NULL DEFAULT now(),\n    last_login_at    timestamptz,\n    avatar_url       text\n);\n\n-- Indexes\nCREATE INDEX idx_users_email ON area.a_users(email);\nCREATE INDEX idx_users_active ON area.a_users(is_active);\nCREATE INDEX idx_users_created_at ON area.a_users(created_at);\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Entity Mapping:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'@Entity\n@Table(name = "a_users", schema = "area")\npublic class User {\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    private UUID id;\n    \n    @Email\n    @Column(unique = true, nullable = false)\n    private String email;\n    \n    @Column(name = "is_active", nullable = false)\n    private Boolean isActive = true;\n    \n    @Column(name = "is_admin", nullable = false)\n    private Boolean isAdmin = false;\n    \n    @CreationTimestamp\n    @Column(name = "created_at", nullable = false, updatable = false)\n    private LocalDateTime createdAt;\n    \n    @Column(name = "last_login_at")\n    private LocalDateTime lastLoginAt;\n    \n    @Column(name = "avatar_url")\n    private String avatarUrl;\n}\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"services-table-a_services",children:["Services Table (",(0,t.jsx)(n.code,{children:"a_services"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE area.a_services (\n    id               uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n    key              text UNIQUE NOT NULL,\n    name             text NOT NULL,\n    auth             varchar(20) NOT NULL DEFAULT 'oauth2',\n    docs_url         text,\n    icon_light_url   text,\n    icon_dark_url    text,\n    is_active        boolean NOT NULL DEFAULT true,\n    created_at       timestamptz NOT NULL DEFAULT now(),\n    updated_at       timestamptz NOT NULL DEFAULT now()\n);\n\n-- Indexes\nCREATE UNIQUE INDEX idx_services_key ON area.a_services(key);\nCREATE INDEX idx_services_active ON area.a_services(is_active);\n\n-- Trigger for updated_at\nCREATE TRIGGER trg_services_updated_at \n    BEFORE UPDATE ON area.a_services\n    FOR EACH ROW EXECUTE FUNCTION area.set_updated_at();\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"areas-table-a_areas",children:["Areas Table (",(0,t.jsx)(n.code,{children:"a_areas"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE area.a_areas (\n    id               uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n    user_id          uuid NOT NULL REFERENCES area.a_users(id) ON DELETE CASCADE,\n    name             text NOT NULL,\n    description      text,\n    enabled          boolean NOT NULL DEFAULT true,\n    actions          jsonb,\n    reactions        jsonb,\n    created_at       timestamptz NOT NULL DEFAULT now(),\n    updated_at       timestamptz NOT NULL DEFAULT now()\n);\n\n-- Indexes\nCREATE INDEX idx_areas_user_id ON area.a_areas(user_id);\nCREATE INDEX idx_areas_enabled ON area.a_areas(enabled);\nCREATE INDEX idx_areas_created_at ON area.a_areas(created_at);\n\n-- JSONB GIN indexes for efficient querying\nCREATE INDEX idx_areas_actions_gin ON area.a_areas USING gin(actions);\nCREATE INDEX idx_areas_reactions_gin ON area.a_areas USING gin(reactions);\n\n-- Trigger for updated_at\nCREATE TRIGGER trg_areas_updated_at \n    BEFORE UPDATE ON area.a_areas\n    FOR EACH ROW EXECUTE FUNCTION area.set_updated_at();\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"action-definitions-table-a_action_definitions",children:["Action Definitions Table (",(0,t.jsx)(n.code,{children:"a_action_definitions"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE area.a_action_definitions (\n    id                  uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n    key                 text UNIQUE NOT NULL,\n    name                text NOT NULL,\n    description         text,\n    service_key         text NOT NULL REFERENCES area.a_services(key),\n    is_event_capable    boolean NOT NULL DEFAULT false,\n    is_executable       boolean NOT NULL DEFAULT false,\n    input_schema        jsonb,\n    output_schema       jsonb,\n    created_at          timestamptz NOT NULL DEFAULT now(),\n    updated_at          timestamptz NOT NULL DEFAULT now()\n);\n\n-- Indexes\nCREATE UNIQUE INDEX idx_action_definitions_key ON area.a_action_definitions(key);\nCREATE INDEX idx_action_definitions_service ON area.a_action_definitions(service_key);\nCREATE INDEX idx_action_definitions_event_capable ON area.a_action_definitions(is_event_capable);\nCREATE INDEX idx_action_definitions_executable ON area.a_action_definitions(is_executable);\n\n-- JSONB GIN indexes\nCREATE INDEX idx_action_definitions_input_schema_gin ON area.a_action_definitions USING gin(input_schema);\nCREATE INDEX idx_action_definitions_output_schema_gin ON area.a_action_definitions USING gin(output_schema);\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"action-instances-table-a_action_instances",children:["Action Instances Table (",(0,t.jsx)(n.code,{children:"a_action_instances"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE area.a_action_instances (\n    id                      uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n    area_id                 uuid NOT NULL REFERENCES area.a_areas(id) ON DELETE CASCADE,\n    action_definition_id    uuid NOT NULL REFERENCES area.a_action_definitions(id),\n    service_account_id      uuid REFERENCES area.a_service_accounts(id),\n    parameters              jsonb,\n    activation_mode         varchar(20) NOT NULL DEFAULT 'WEBHOOK',\n    cron_expression         text,\n    enabled                 boolean NOT NULL DEFAULT true,\n    created_at              timestamptz NOT NULL DEFAULT now(),\n    updated_at              timestamptz NOT NULL DEFAULT now()\n);\n\n-- Indexes\nCREATE INDEX idx_action_instances_area_id ON area.a_action_instances(area_id);\nCREATE INDEX idx_action_instances_action_def ON area.a_action_instances(action_definition_id);\nCREATE INDEX idx_action_instances_service_account ON area.a_action_instances(service_account_id);\nCREATE INDEX idx_action_instances_activation_mode ON area.a_action_instances(activation_mode);\nCREATE INDEX idx_action_instances_enabled ON area.a_action_instances(enabled);\n\n-- JSONB GIN index\nCREATE INDEX idx_action_instances_parameters_gin ON area.a_action_instances USING gin(parameters);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"security-tables",children:"Security Tables"}),"\n",(0,t.jsxs)(n.h3,{id:"user-local-identities-a_user_local_identities",children:["User Local Identities (",(0,t.jsx)(n.code,{children:"a_user_local_identities"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE area.a_user_local_identities (\n    id                              uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n    user_id                         uuid NOT NULL REFERENCES area.a_users(id) ON DELETE CASCADE,\n    email                          citext UNIQUE NOT NULL,\n    password_hash                  text NOT NULL,\n    salt                           text,\n    is_email_verified              boolean NOT NULL DEFAULT false,\n    email_verification_token       text,\n    email_verification_expires_at  timestamptz,\n    password_reset_token           text,\n    password_reset_expires_at      timestamptz,\n    failed_login_attempts          integer NOT NULL DEFAULT 0,\n    locked_until                   timestamptz,\n    last_password_change_at        timestamptz,\n    created_at                     timestamptz NOT NULL DEFAULT now(),\n    updated_at                     timestamptz NOT NULL DEFAULT now(),\n    UNIQUE (user_id)\n);\n\n-- Indexes\nCREATE INDEX idx_user_local_identities_email ON area.a_user_local_identities(email);\nCREATE INDEX idx_user_local_identities_verification_token ON area.a_user_local_identities(email_verification_token);\nCREATE INDEX idx_user_local_identities_reset_token ON area.a_user_local_identities(password_reset_token);\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"user-oauth-identities-a_user_oauth_identities",children:["User OAuth Identities (",(0,t.jsx)(n.code,{children:"a_user_oauth_identities"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE area.a_user_oauth_identities (\n    id                  uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n    user_id             uuid NOT NULL REFERENCES area.a_users(id) ON DELETE CASCADE,\n    provider            text NOT NULL,\n    provider_user_id    text NOT NULL,\n    access_token_enc    text,\n    refresh_token_enc   text,\n    expires_at          timestamptz,\n    scopes              jsonb,\n    token_meta          jsonb,\n    created_at          timestamptz NOT NULL DEFAULT now(),\n    updated_at          timestamptz NOT NULL DEFAULT now(),\n    UNIQUE (user_id, provider)\n);\n\n-- Indexes\nCREATE INDEX idx_user_oauth_identities_user_id ON area.a_user_oauth_identities(user_id);\nCREATE INDEX idx_user_oauth_identities_provider ON area.a_user_oauth_identities(provider);\nCREATE UNIQUE INDEX idx_user_oauth_identities_provider_user ON area.a_user_oauth_identities(provider, provider_user_id);\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"service-accounts-a_service_accounts",children:["Service Accounts (",(0,t.jsx)(n.code,{children:"a_service_accounts"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE area.a_service_accounts (\n    id                   uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n    user_id              uuid NOT NULL REFERENCES area.a_users(id) ON DELETE CASCADE,\n    service_id           uuid NOT NULL REFERENCES area.a_services(id),\n    account_name         text NOT NULL,\n    access_token_enc     text,\n    refresh_token_enc    text,\n    expires_at           timestamptz,\n    scopes               text,\n    metadata             jsonb,\n    is_active            boolean NOT NULL DEFAULT true,\n    created_at           timestamptz NOT NULL DEFAULT now(),\n    updated_at           timestamptz NOT NULL DEFAULT now()\n);\n\n-- Indexes\nCREATE INDEX idx_service_accounts_user_id ON area.a_service_accounts(user_id);\nCREATE INDEX idx_service_accounts_service_id ON area.a_service_accounts(service_id);\nCREATE INDEX idx_service_accounts_active ON area.a_service_accounts(is_active);\n\n-- JSONB GIN index\nCREATE INDEX idx_service_accounts_metadata_gin ON area.a_service_accounts USING gin(metadata);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"execution-tables",children:"Execution Tables"}),"\n",(0,t.jsxs)(n.h3,{id:"executions-table-a_executions",children:["Executions Table (",(0,t.jsx)(n.code,{children:"a_executions"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE area.a_executions (\n    id                    uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n    area_id               uuid NOT NULL REFERENCES area.a_areas(id),\n    trigger_action_id     uuid REFERENCES area.a_action_instances(id),\n    input_data            jsonb,\n    output_data           jsonb,\n    status                varchar(20) NOT NULL DEFAULT 'QUEUED',\n    error_message         text,\n    retry_count           integer NOT NULL DEFAULT 0,\n    triggered_at          timestamptz NOT NULL DEFAULT now(),\n    started_at            timestamptz,\n    completed_at          timestamptz,\n    created_at            timestamptz NOT NULL DEFAULT now(),\n    updated_at            timestamptz NOT NULL DEFAULT now()\n);\n\n-- Indexes\nCREATE INDEX idx_executions_area_id ON area.a_executions(area_id);\nCREATE INDEX idx_executions_trigger_action ON area.a_executions(trigger_action_id);\nCREATE INDEX idx_executions_status ON area.a_executions(status);\nCREATE INDEX idx_executions_triggered_at ON area.a_executions(triggered_at);\nCREATE INDEX idx_executions_retry_count ON area.a_executions(retry_count);\n\n-- JSONB GIN indexes\nCREATE INDEX idx_executions_input_data_gin ON area.a_executions USING gin(input_data);\nCREATE INDEX idx_executions_output_data_gin ON area.a_executions USING gin(output_data);\n\n-- Composite indexes for common queries\nCREATE INDEX idx_executions_status_triggered ON area.a_executions(status, triggered_at);\nCREATE INDEX idx_executions_area_status ON area.a_executions(area_id, status);\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"activation-modes-table-a_activation_modes",children:["Activation Modes Table (",(0,t.jsx)(n.code,{children:"a_activation_modes"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE area.a_activation_modes (\n    id                  uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n    area_id             uuid NOT NULL REFERENCES area.a_areas(id) ON DELETE CASCADE,\n    mode_type           varchar(20) NOT NULL,\n    configuration       jsonb,\n    is_active           boolean NOT NULL DEFAULT true,\n    created_at          timestamptz NOT NULL DEFAULT now(),\n    updated_at          timestamptz NOT NULL DEFAULT now()\n);\n\n-- Indexes\nCREATE INDEX idx_activation_modes_area_id ON area.a_activation_modes(area_id);\nCREATE INDEX idx_activation_modes_type ON area.a_activation_modes(mode_type);\nCREATE INDEX idx_activation_modes_active ON area.a_activation_modes(is_active);\n\n-- JSONB GIN index\nCREATE INDEX idx_activation_modes_config_gin ON area.a_activation_modes USING gin(configuration);\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"action-links-table-a_action_links",children:["Action Links Table (",(0,t.jsx)(n.code,{children:"a_action_links"}),")"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE area.a_action_links (\n    id                      uuid PRIMARY KEY DEFAULT gen_random_uuid(),\n    area_id                 uuid NOT NULL REFERENCES area.a_areas(id) ON DELETE CASCADE,\n    source_action_id        uuid NOT NULL REFERENCES area.a_action_instances(id),\n    target_reaction_id      uuid NOT NULL REFERENCES area.a_action_instances(id),\n    data_mapping            jsonb,\n    link_type               varchar(20) NOT NULL DEFAULT 'DIRECT',\n    conditions              jsonb,\n    is_active               boolean NOT NULL DEFAULT true,\n    created_at              timestamptz NOT NULL DEFAULT now(),\n    updated_at              timestamptz NOT NULL DEFAULT now()\n);\n\n-- Indexes\nCREATE INDEX idx_action_links_area_id ON area.a_action_links(area_id);\nCREATE INDEX idx_action_links_source ON area.a_action_links(source_action_id);\nCREATE INDEX idx_action_links_target ON area.a_action_links(target_reaction_id);\nCREATE INDEX idx_action_links_type ON area.a_action_links(link_type);\nCREATE INDEX idx_action_links_active ON area.a_action_links(is_active);\n\n-- JSONB GIN indexes\nCREATE INDEX idx_action_links_mapping_gin ON area.a_action_links USING gin(data_mapping);\nCREATE INDEX idx_action_links_conditions_gin ON area.a_action_links USING gin(conditions);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"indexes-and-performance",children:"Indexes and Performance"}),"\n",(0,t.jsx)(n.h3,{id:"primary-indexes",children:"Primary Indexes"}),"\n",(0,t.jsx)(n.p,{children:"All tables use UUID primary keys with B-tree indexes for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Fast point lookups"}),"\n",(0,t.jsx)(n.li,{children:"Efficient joins"}),"\n",(0,t.jsx)(n.li,{children:"Distributed scaling support"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"foreign-key-indexes",children:"Foreign Key Indexes"}),"\n",(0,t.jsx)(n.p,{children:"All foreign key columns have dedicated indexes for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Join performance optimization"}),"\n",(0,t.jsx)(n.li,{children:"Referential integrity checks"}),"\n",(0,t.jsx)(n.li,{children:"Cascade operation efficiency"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"jsonb-indexes",children:"JSONB Indexes"}),"\n",(0,t.jsx)(n.p,{children:"GIN (Generalized Inverted) indexes on JSONB columns for:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Fast JSON property searches"}),"\n",(0,t.jsx)(n.li,{children:"Containment operations"}),"\n",(0,t.jsx)(n.li,{children:"Complex query optimization"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"composite-indexes",children:"Composite Indexes"}),"\n",(0,t.jsx)(n.p,{children:"Strategic composite indexes for common query patterns:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- Execution queries by area and status\nCREATE INDEX idx_executions_area_status ON area.a_executions(area_id, status);\n\n-- Time-based queries with status\nCREATE INDEX idx_executions_status_triggered ON area.a_executions(status, triggered_at);\n\n-- User areas with enabled status\nCREATE INDEX idx_areas_user_enabled ON area.a_areas(user_id, enabled);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"performance-optimization-strategies",children:"Performance Optimization Strategies"}),"\n",(0,t.jsx)(n.h4,{id:"query-optimization",children:"Query Optimization"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'-- Efficient area lookup with actions\nSELECT a.*, ai.* \nFROM area.a_areas a\nLEFT JOIN area.a_action_instances ai ON a.id = ai.area_id\nWHERE a.user_id = ? AND a.enabled = true\nORDER BY a.created_at DESC\nLIMIT 20;\n\n-- JSONB query optimization\nSELECT * FROM area.a_areas \nWHERE actions @> \'[{"action_definition_id": "github-issue-created"}]\';\n'})}),"\n",(0,t.jsx)(n.h4,{id:"connection-pool-tuning",children:"Connection Pool Tuning"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-properties",children:"# HikariCP optimizations\nspring.datasource.hikari.maximum-pool-size=20\nspring.datasource.hikari.minimum-idle=5\nspring.datasource.hikari.connection-timeout=20000\nspring.datasource.hikari.idle-timeout=300000\nspring.datasource.hikari.max-lifetime=1200000\nspring.datasource.hikari.leak-detection-threshold=60000\n"})}),"\n",(0,t.jsx)(n.h2,{id:"migration-strategy",children:"Migration Strategy"}),"\n",(0,t.jsx)(n.h3,{id:"flyway-configuration",children:"Flyway Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- V1__Initial_schema.sql\n-- Creates all base tables, indexes, and functions\n\n-- V2__Fix_action_definition_description_column.sql\n-- Schema corrections and improvements\n\n-- V3__Change_all_enum_columns_to_varchar.sql\n-- Enum to varchar migration for flexibility\n\n-- V4__Fix_execution_area_trigger.sql\n-- Trigger improvements\n\n-- V5__Add_github_service_and_actions.sql\n-- GitHub service integration\n\n-- V6__Add_jsonb_actions_reactions_to_areas.sql\n-- JSONB column additions for flexibility\n\n-- V7__Add_github_personal_token.sql\n-- Personal token support\n\n-- V8__Add_link_type_to_action_links.sql\n-- Link type enhancements\n\n-- V9__Fix_action_links_trigger_schema.sql\n-- Trigger fixes and improvements\n"})}),"\n",(0,t.jsx)(n.h3,{id:"migration-best-practices",children:"Migration Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Incremental Changes"}),": Small, focused migrations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Rollback Support"}),": Reversible operations where possible"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Preservation"}),": No destructive changes without backups"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Index Management"}),": Create indexes CONCURRENTLY in production"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Testing"}),": Validate migrations in staging environment"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-migration",children:"Example Migration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'-- V10__Add_user_preferences.sql\nBEGIN;\n\n-- Add new column with default value\nALTER TABLE area.a_users \nADD COLUMN preferences jsonb DEFAULT \'{}\';\n\n-- Create index for new column\nCREATE INDEX CONCURRENTLY idx_users_preferences_gin \nON area.a_users USING gin(preferences);\n\n-- Update existing users with default preferences\nUPDATE area.a_users \nSET preferences = \'{\n    "notifications": true,\n    "theme": "light",\n    "timezone": "UTC"\n}\'\nWHERE preferences IS NULL;\n\nCOMMIT;\n'})}),"\n",(0,t.jsx)(n.h2,{id:"data-types",children:"Data Types"}),"\n",(0,t.jsx)(n.h3,{id:"uuid-usage",children:"UUID Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- Primary keys\nid uuid PRIMARY KEY DEFAULT gen_random_uuid()\n\n-- Foreign keys\nuser_id uuid NOT NULL REFERENCES area.a_users(id)\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Benefits:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Globally unique identifiers"}),"\n",(0,t.jsx)(n.li,{children:"Horizontal scaling support"}),"\n",(0,t.jsx)(n.li,{children:"No collision risk across instances"}),"\n",(0,t.jsx)(n.li,{children:"128-bit entropy"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"jsonb-usage",children:"JSONB Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- Flexible configuration storage\nparameters jsonb\nmetadata jsonb\ninput_schema jsonb\noutput_schema jsonb\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Benefits:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Schema flexibility"}),"\n",(0,t.jsx)(n.li,{children:"Efficient storage and indexing"}),"\n",(0,t.jsx)(n.li,{children:"Native JSON operations"}),"\n",(0,t.jsx)(n.li,{children:"GIN index support"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"timestamp-usage",children:"Timestamp Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- All timestamps with timezone\ncreated_at timestamptz NOT NULL DEFAULT now()\nupdated_at timestamptz NOT NULL DEFAULT now()\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Benefits:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Timezone awareness"}),"\n",(0,t.jsx)(n.li,{children:"Consistent global timestamps"}),"\n",(0,t.jsx)(n.li,{children:"Automatic UTC conversion"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"text-vs-varchar",children:"Text vs VARCHAR"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- Use text for unlimited length\ndescription text\nerror_message text\n\n-- Use varchar for constrained values\nstatus varchar(20) NOT NULL\nactivation_mode varchar(20) NOT NULL\n"})}),"\n",(0,t.jsx)(n.h2,{id:"database-functions",children:"Database Functions"}),"\n",(0,t.jsx)(n.h3,{id:"utility-functions",children:"Utility Functions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- Updated timestamp function\nCREATE OR REPLACE FUNCTION area.set_updated_at()\nRETURNS trigger LANGUAGE plpgsql AS $$\nBEGIN\n  NEW.updated_at := NOW();\n  RETURN NEW;\nEND$$;\n\n-- Payload hash function\nCREATE OR REPLACE FUNCTION area.payload_sha256(p jsonb)\nRETURNS text LANGUAGE sql IMMUTABLE AS $$\n  SELECT encode(digest(convert_to(p::text, 'UTF8'), 'sha256'), 'hex')\n$$;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"triggers",children:"Triggers"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- Automatic updated_at management\nCREATE TRIGGER trg_areas_updated_at \n    BEFORE UPDATE ON area.a_areas\n    FOR EACH ROW EXECUTE FUNCTION area.set_updated_at();\n\nCREATE TRIGGER trg_service_accounts_updated_at \n    BEFORE UPDATE ON area.a_service_accounts\n    FOR EACH ROW EXECUTE FUNCTION area.set_updated_at();\n"})}),"\n",(0,t.jsx)(n.h2,{id:"monitoring-and-maintenance",children:"Monitoring and Maintenance"}),"\n",(0,t.jsx)(n.h3,{id:"query-performance-monitoring",children:"Query Performance Monitoring"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- Enable query statistics\nCREATE EXTENSION IF NOT EXISTS pg_stat_statements;\n\n-- Monitor slow queries\nSELECT query, calls, total_time, mean_time, rows\nFROM pg_stat_statements\nWHERE mean_time > 100\nORDER BY mean_time DESC\nLIMIT 20;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"index-usage-analysis",children:"Index Usage Analysis"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- Check index usage\nSELECT schemaname, tablename, indexname, idx_scan, idx_tup_read, idx_tup_fetch\nFROM pg_stat_user_indexes\nWHERE schemaname = 'area'\nORDER BY idx_scan DESC;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"database-size-monitoring",children:"Database Size Monitoring"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- Table sizes\nSELECT schemaname, tablename,\n       pg_size_pretty(pg_total_relation_size(schemaname||'.'||tablename)) as size\nFROM pg_tables \nWHERE schemaname = 'area'\nORDER BY pg_total_relation_size(schemaname||'.'||tablename) DESC;\n"})})]})}function _(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>c});var i=a(6540);const t={},s=i.createContext(t);function r(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);