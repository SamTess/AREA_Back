"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[3404],{3512:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"technical/diagrams/core-entities-class-diagram","title":"Core Entities Class Diagram","description":"This diagram shows the core entity model of the AREA system, focusing on the main domain objects and their relationships.","source":"@site/docs/technical/diagrams/01-core-entities-class-diagram.md","sourceDirName":"technical/diagrams","slug":"/technical/diagrams/core-entities-class-diagram","permalink":"/AREA_Back/docs/technical/diagrams/core-entities-class-diagram","draft":false,"unlisted":false,"editUrl":"https://github.com/SamTess/AREA_Back/tree/main/docusaurus/docs/technical/diagrams/01-core-entities-class-diagram.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"AREA System - UML Diagrams Overview","permalink":"/AREA_Back/docs/technical/diagrams/OVERVIEW"},"next":{"title":"Authentication System Class Diagram","permalink":"/AREA_Back/docs/technical/diagrams/authentication-class-diagram"}}');var a=i(4848),s=i(8453);const r={},c="Core Entities Class Diagram",o={},l=[{value:"Entity Descriptions",id:"entity-descriptions",level:2},{value:"User",id:"user",level:3},{value:"Area",id:"area",level:3},{value:"Service",id:"service",level:3},{value:"ActionDefinition",id:"actiondefinition",level:3},{value:"ActionInstance",id:"actioninstance",level:3},{value:"ServiceAccount",id:"serviceaccount",level:3},{value:"ActivationMode",id:"activationmode",level:3},{value:"UserOAuthIdentity",id:"useroauthidentity",level:3},{value:"Key Relationships",id:"key-relationships",level:2}];function d(e){const n={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"core-entities-class-diagram",children:"Core Entities Class Diagram"})}),"\n",(0,a.jsx)(n.p,{children:"This diagram shows the core entity model of the AREA system, focusing on the main domain objects and their relationships."}),"\n",(0,a.jsx)(n.mermaid,{value:'classDiagram\n    class User {\n        -UUID id\n        -String email\n        -String username\n        -String firstname\n        -String lastname\n        -Boolean isActive\n        -Boolean isAdmin\n        -Boolean isVerified\n        -LocalDateTime createdAt\n        -LocalDateTime lastLoginAt\n        -String avatarUrl\n        -List~Area~ areas\n        -List~UserOAuthIdentity~ oauthIdentities\n        -List~ServiceAccount~ serviceAccounts\n    }\n\n    class Area {\n        -UUID id\n        -String name\n        -String description\n        -Boolean enabled\n        -List~Map~ actions\n        -List~Map~ reactions\n        -LocalDateTime createdAt\n        -LocalDateTime updatedAt\n        -User user\n    }\n\n    class Service {\n        -UUID id\n        -String key\n        -String name\n        -AuthType auth\n        -String docsUrl\n        -String iconLightUrl\n        -String iconDarkUrl\n        -Boolean isActive\n        -LocalDateTime createdAt\n        -LocalDateTime updatedAt\n    }\n\n    class ActionDefinition {\n        -UUID id\n        -String key\n        -String name\n        -String description\n        -Map~String,Object~ inputSchema\n        -Map~String,Object~ outputSchema\n        -Boolean isEventCapable\n        -Boolean isExecutable\n        -String version\n        -Service service\n    }\n\n    class ActionInstance {\n        -UUID id\n        -String name\n        -Boolean enabled\n        -Map~String,Object~ parameters\n        -Map~String,Object~ mapping\n        -Map~String,Object~ condition\n        -Integer order\n        -LocalDateTime createdAt\n        -LocalDateTime updatedAt\n        -User user\n        -Area area\n        -ActionDefinition actionDefinition\n        -ServiceAccount serviceAccount\n    }\n\n    class ServiceAccount {\n        -UUID id\n        -String accountIdentifier\n        -String accessToken\n        -String refreshToken\n        -LocalDateTime tokenExpiresAt\n        -Map~String,Object~ metadata\n        -Boolean isActive\n        -LocalDateTime createdAt\n        -LocalDateTime updatedAt\n        -User user\n        -Service service\n    }\n\n    class ActivationMode {\n        -UUID id\n        -ActivationModeType type\n        -Map~String,Object~ config\n        -Boolean enabled\n        -DedupStrategy dedup\n        -Integer maxConcurrency\n        -Map~String,Object~ rateLimit\n        -ActionInstance actionInstance\n    }\n\n    class UserOAuthIdentity {\n        -UUID id\n        -String provider\n        -String providerUserId\n        -String email\n        -Map~String,Object~ profile\n        -LocalDateTime createdAt\n        -User user\n    }\n\n    %% Relationships\n    User "1" --\x3e "*" Area : owns\n    User "1" --\x3e "*" ServiceAccount : has\n    User "1" --\x3e "*" UserOAuthIdentity : has\n    User "1" --\x3e "*" ActionInstance : creates\n    \n    Area "1" --\x3e "*" ActionInstance : contains\n    \n    Service "1" --\x3e "*" ActionDefinition : provides\n    Service "1" --\x3e "*" ServiceAccount : authenticates\n    \n    ActionDefinition "1" --\x3e "*" ActionInstance : templates\n    \n    ActionInstance "1" --\x3e "0..1" ServiceAccount : uses\n    ActionInstance "1" --\x3e "*" ActivationMode : configured_by\n\n    %% Enumerations\n    class AuthType {\n        <<enumeration>>\n        OAUTH2\n        APIKEY\n        NONE\n    }\n\n    class ActivationModeType {\n        <<enumeration>>\n        WEBHOOK\n        CRON\n        POLL\n        MANUAL\n    }\n\n    class DedupStrategy {\n        <<enumeration>>\n        NONE\n        SIMPLE\n        ADVANCED\n    }\n\n    Service --\x3e AuthType : uses\n    ActivationMode --\x3e ActivationModeType : uses\n    ActivationMode --\x3e DedupStrategy : uses'}),"\n",(0,a.jsx)(n.h2,{id:"entity-descriptions",children:"Entity Descriptions"}),"\n",(0,a.jsx)(n.h3,{id:"user",children:"User"}),"\n",(0,a.jsx)(n.p,{children:"The main user entity representing an authenticated user in the system. Can own multiple Areas and service connections."}),"\n",(0,a.jsx)(n.h3,{id:"area",children:"Area"}),"\n",(0,a.jsx)(n.p,{children:"Represents an automation workflow created by a user. Contains actions (triggers) and reactions (responses) stored as JSONB."}),"\n",(0,a.jsx)(n.h3,{id:"service",children:"Service"}),"\n",(0,a.jsx)(n.p,{children:"Third-party service integration (e.g., GitHub, Gmail, Slack). Defines how the service authenticates and what actions it provides."}),"\n",(0,a.jsx)(n.h3,{id:"actiondefinition",children:"ActionDefinition"}),"\n",(0,a.jsx)(n.p,{children:"Template for an action or reaction. Defines the input/output schema and whether it can be used as a trigger or response."}),"\n",(0,a.jsx)(n.h3,{id:"actioninstance",children:"ActionInstance"}),"\n",(0,a.jsx)(n.p,{children:"Concrete instance of an ActionDefinition within an Area. Contains user-specific parameters and configuration."}),"\n",(0,a.jsx)(n.h3,{id:"serviceaccount",children:"ServiceAccount"}),"\n",(0,a.jsx)(n.p,{children:"OAuth credentials linking a User to a Service, allowing authenticated API calls."}),"\n",(0,a.jsx)(n.h3,{id:"activationmode",children:"ActivationMode"}),"\n",(0,a.jsx)(n.p,{children:"Defines how an ActionInstance should be triggered (webhook, cron schedule, polling)."}),"\n",(0,a.jsx)(n.h3,{id:"useroauthidentity",children:"UserOAuthIdentity"}),"\n",(0,a.jsx)(n.p,{children:"OAuth identity from external providers (Google, GitHub) for user authentication."}),"\n",(0,a.jsx)(n.h2,{id:"key-relationships",children:"Key Relationships"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"User owns Areas"}),": One user can create multiple automation workflows"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Area contains ActionInstances"}),": Each automation workflow has multiple action and reaction instances"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Service provides ActionDefinitions"}),": Each service defines what actions/reactions are available"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"ActionInstance uses ServiceAccount"}),": Actions need authentication to access external APIs"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"ActionInstance configured by ActivationMode"}),": Defines trigger mechanism (webhook, cron, poll)"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var t=i(6540);const a={},s=t.createContext(a);function r(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);