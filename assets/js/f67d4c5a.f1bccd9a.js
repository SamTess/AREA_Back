"use strict";(globalThis.webpackChunkdocusaurus=globalThis.webpackChunkdocusaurus||[]).push([[7839],{5731:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"guides/checkstyle-guide","title":"Checkstyle Guide","description":"This guide explains how to use Checkstyle in the AREA Backend project for maintaining consistent code quality and style.","source":"@site/docs/guides/checkstyle-guide.md","sourceDirName":"guides","slug":"/guides/checkstyle-guide","permalink":"/docs/guides/checkstyle-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/SamTess/AREA_Back/tree/main/docusaurus/docs/guides/checkstyle-guide.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"AREA Creation API Implementation","permalink":"/docs/guides/area-creation-api"},"next":{"title":"Data Migration Guide","permalink":"/docs/guides/data-migration-guide"}}');var l=i(4848),r=i(8453);const t={},o="Checkstyle Guide",c={},d=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Overview",id:"overview",level:2},{value:"Current Configuration",id:"current-configuration",level:3},{value:"Checkstyle Configuration",id:"checkstyle-configuration",level:2},{value:"Build Configuration",id:"build-configuration",level:3},{value:"Main Configuration File",id:"main-configuration-file",level:3},{value:"Running Checkstyle",id:"running-checkstyle",level:2},{value:"Command Line",id:"command-line",level:3},{value:"Output Location",id:"output-location",level:3},{value:"Understanding Reports",id:"understanding-reports",level:2},{value:"HTML Report Structure",id:"html-report-structure",level:3},{value:"Reading Violations",id:"reading-violations",level:3},{value:"Common Rules and Fixes",id:"common-rules-and-fixes",level:2},{value:"1. Line Length Violations",id:"1-line-length-violations",level:3},{value:"2. Indentation Issues",id:"2-indentation-issues",level:3},{value:"3. Whitespace Issues",id:"3-whitespace-issues",level:3},{value:"4. Import Organization",id:"4-import-organization",level:3},{value:"5. Method Length",id:"5-method-length",level:3},{value:"6. Naming Conventions",id:"6-naming-conventions",level:3},{value:"7. Javadoc Requirements",id:"7-javadoc-requirements",level:3},{value:"IDE Integration",id:"ide-integration",level:2},{value:"IntelliJ IDEA",id:"intellij-idea",level:3},{value:"VS Code",id:"vs-code",level:3},{value:"Eclipse",id:"eclipse",level:3},{value:"Suppressing Violations",id:"suppressing-violations",level:2},{value:"Method 1: Suppressions File",id:"method-1-suppressions-file",level:3},{value:"Method 2: Inline Suppressions",id:"method-2-inline-suppressions",level:3},{value:"Method 3: Comment-based Suppressions",id:"method-3-comment-based-suppressions",level:3},{value:"Customizing Rules",id:"customizing-rules",level:2},{value:"Modifying Existing Rules",id:"modifying-existing-rules",level:3},{value:"Adding New Rules",id:"adding-new-rules",level:3},{value:"Severity Levels",id:"severity-levels",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Regular Checking",id:"1-regular-checking",level:3},{value:"2. Team Consistency",id:"2-team-consistency",level:3},{value:"3. Gradual Implementation",id:"3-gradual-implementation",level:3},{value:"4. Configuration Management",id:"4-configuration-management",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Performance Issues",id:"performance-issues",level:3},{value:"Integration Issues",id:"integration-issues",level:3},{value:"Continuous Improvement",id:"continuous-improvement",level:2},{value:"Metrics Tracking",id:"metrics-tracking",level:3},{value:"Regular Reviews",id:"regular-reviews",level:3},{value:"Tool Evolution",id:"tool-evolution",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"checkstyle-guide",children:"Checkstyle Guide"})}),"\n",(0,l.jsx)(n.p,{children:"This guide explains how to use Checkstyle in the AREA Backend project for maintaining consistent code quality and style."}),"\n",(0,l.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#overview",children:"Overview"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#checkstyle-configuration",children:"Checkstyle Configuration"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#running-checkstyle",children:"Running Checkstyle"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#understanding-reports",children:"Understanding Reports"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#common-rules-and-fixes",children:"Common Rules and Fixes"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#ide-integration",children:"IDE Integration"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#suppressing-violations",children:"Suppressing Violations"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#customizing-rules",children:"Customizing Rules"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#best-practices",children:"Best Practices"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#troubleshooting",children:"Troubleshooting"})}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsx)(n.p,{children:"Checkstyle is a development tool that helps ensure Java code adheres to coding standards. The AREA Backend project uses Checkstyle to maintain consistent code style across the entire codebase."}),"\n",(0,l.jsx)(n.h3,{id:"current-configuration",children:"Current Configuration"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Checkstyle Version"}),": 10.12.4"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Configuration File"}),": ",(0,l.jsx)(n.code,{children:"config/checkstyle/checkstyle.xml"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Suppressions"}),": ",(0,l.jsx)(n.code,{children:"config/checkstyle/suppressions.xml"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Maximum Warnings"}),": 50"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Maximum Errors"}),": 20"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Line Length Limit"}),": 120 characters"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"checkstyle-configuration",children:"Checkstyle Configuration"}),"\n",(0,l.jsx)(n.h3,{id:"build-configuration",children:"Build Configuration"}),"\n",(0,l.jsxs)(n.p,{children:["The Checkstyle plugin is configured in ",(0,l.jsx)(n.code,{children:"build.gradle"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-gradle",children:'checkstyle {\n    toolVersion = \'10.12.4\'\n    configFile = file("config/checkstyle/checkstyle.xml")\n    ignoreFailures = true\n    maxWarnings = 50\n    maxErrors = 20\n}\n\ncheckstyleMain {\n    reports {\n        xml.required = true\n        html.required = true\n        html.outputLocation = file("build/reports/checkstyle/main.html")\n    }\n}\n\ncheckstyleTest {\n    reports {\n        xml.required = true\n        html.required = true\n        html.outputLocation = file("build/reports/checkstyle/test.html")\n    }\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"main-configuration-file",children:"Main Configuration File"}),"\n",(0,l.jsxs)(n.p,{children:["The main configuration is located at ",(0,l.jsx)(n.code,{children:"config/checkstyle/checkstyle.xml"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0"?>\n<!DOCTYPE module PUBLIC\n    "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"\n    "https://checkstyle.org/dtds/configuration_1_3.dtd">\n\n<module name="Checker">\n    <property name="charset" value="UTF-8"/>\n    <property name="severity" value="error"/>\n    <property name="fileExtensions" value="java, properties, xml"/>\n\n    \x3c!-- Suppressions --\x3e\n    <module name="SuppressionFilter">\n        <property name="file" value="${config_loc}/suppressions.xml"/>\n        <property name="optional" value="true"/>\n    </module>\n\n    \x3c!-- File checks --\x3e\n    <module name="FileLength">\n        <property name="max" value="2000"/>\n    </module>\n\n    <module name="LineLength">\n        <property name="fileExtensions" value="java"/>\n        <property name="max" value="120"/>\n        <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>\n    </module>\n\n    \x3c!-- Other checks... --\x3e\n</module>\n'})}),"\n",(0,l.jsx)(n.h2,{id:"running-checkstyle",children:"Running Checkstyle"}),"\n",(0,l.jsx)(n.h3,{id:"command-line",children:"Command Line"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Run checkstyle on main source code\n./gradlew checkstyleMain\n\n# Run checkstyle on test source code\n./gradlew checkstyleTest\n\n# Run checkstyle on both main and test code\n./gradlew check\n\n# Run only checkstyle (excluding other checks)\n./gradlew checkstyleMain checkstyleTest\n"})}),"\n",(0,l.jsx)(n.h3,{id:"output-location",children:"Output Location"}),"\n",(0,l.jsx)(n.p,{children:"Checkstyle reports are generated in:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"HTML Reports"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Main: ",(0,l.jsx)(n.code,{children:"build/reports/checkstyle/main.html"})]}),"\n",(0,l.jsxs)(n.li,{children:["Test: ",(0,l.jsx)(n.code,{children:"build/reports/checkstyle/test.html"})]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"XML Reports"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Main: ",(0,l.jsx)(n.code,{children:"build/reports/checkstyle/main.xml"})]}),"\n",(0,l.jsxs)(n.li,{children:["Test: ",(0,l.jsx)(n.code,{children:"build/reports/checkstyle/test.xml"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"understanding-reports",children:"Understanding Reports"}),"\n",(0,l.jsx)(n.h3,{id:"html-report-structure",children:"HTML Report Structure"}),"\n",(0,l.jsx)(n.p,{children:"The HTML report provides:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Summary"}),": Total violations by severity"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"File List"}),": Files with violations"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Detailed View"}),": Line-by-line violations with descriptions"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"reading-violations",children:"Reading Violations"}),"\n",(0,l.jsx)(n.p,{children:"Each violation shows:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Severity"}),": Error, Warning, or Info"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Rule"}),": The specific Checkstyle rule violated"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Line Number"}),": Where the violation occurs"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Message"}),": Description of the issue"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Column"}),": Specific column position (if applicable)"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example Violation:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"[ERROR] LineLength: Line is longer than 120 characters (found 125). [LineLength]\nFile: UserController.java\nLine: 45\nColumn: 125\n"})}),"\n",(0,l.jsx)(n.h2,{id:"common-rules-and-fixes",children:"Common Rules and Fixes"}),"\n",(0,l.jsx)(n.h3,{id:"1-line-length-violations",children:"1. Line Length Violations"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Rule"}),": Maximum 120 characters per line"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Common Violation:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"// BAD - Line too long\npublic ResponseEntity<UserResponse> createUser(@Valid @RequestBody CreateUserRequest request, HttpServletRequest httpRequest) {\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Fix:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"// GOOD - Line wrapped appropriately\npublic ResponseEntity<UserResponse> createUser(\n        @Valid @RequestBody CreateUserRequest request,\n        HttpServletRequest httpRequest) {\n"})}),"\n",(0,l.jsx)(n.h3,{id:"2-indentation-issues",children:"2. Indentation Issues"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Rule"}),": Consistent indentation (4 spaces)"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Common Violation:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"// BAD - Inconsistent indentation\npublic void someMethod() {\n  if (condition) {\n      doSomething();\n    }\n}\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Fix:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"// GOOD - Consistent 4-space indentation\npublic void someMethod() {\n    if (condition) {\n        doSomething();\n    }\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"3-whitespace-issues",children:"3. Whitespace Issues"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Rule"}),": Proper whitespace around operators and keywords"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Common Violations:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"// BAD - Missing whitespace\nif(condition){\n    int result=a+b;\n}\n\n// BAD - Extra whitespace\nif ( condition ) {\n    int result = a + b ;\n}\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Fix:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"// GOOD - Proper whitespace\nif (condition) {\n    int result = a + b;\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"4-import-organization",children:"4. Import Organization"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Rule"}),": Proper import ordering and no unused imports"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Common Violations:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"// BAD - Wrong order, unused import\nimport java.util.List;\nimport area.server.AREA_Back.entity.User;\nimport java.time.LocalDateTime;\nimport java.util.Map; // unused\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Fix:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"// GOOD - Proper order, no unused imports\nimport java.time.LocalDateTime;\nimport java.util.List;\n\nimport area.server.AREA_Back.entity.User;\n"})}),"\n",(0,l.jsx)(n.h3,{id:"5-method-length",children:"5. Method Length"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Rule"}),": Methods should not exceed reasonable length (typically 150 lines)"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Fix"}),": Break large methods into smaller, focused methods:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"// BAD - Method too long\npublic void processUser() {\n    // ... 200 lines of code\n}\n\n// GOOD - Broken into smaller methods\npublic void processUser() {\n    validateUser();\n    enrichUserData();\n    saveUser();\n}\n\nprivate void validateUser() {\n    // validation logic\n}\n\nprivate void enrichUserData() {\n    // enrichment logic\n}\n\nprivate void saveUser() {\n    // save logic\n}\n"})}),"\n",(0,l.jsx)(n.h3,{id:"6-naming-conventions",children:"6. Naming Conventions"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Rules"}),":"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Classes: PascalCase"}),"\n",(0,l.jsx)(n.li,{children:"Methods/Variables: camelCase"}),"\n",(0,l.jsx)(n.li,{children:"Constants: UPPER_SNAKE_CASE"}),"\n",(0,l.jsx)(n.li,{children:"Packages: lowercase"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'// GOOD\npublic class UserController {\n    private static final String DEFAULT_ROLE = "USER";\n    private UserService userService;\n    \n    public ResponseEntity<UserResponse> createUser() {\n        // method body\n    }\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"7-javadoc-requirements",children:"7. Javadoc Requirements"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Rule"}),": Public classes and methods should have Javadoc"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'/**\n * Controller for managing user-related operations.\n * Provides endpoints for CRUD operations on users.\n */\n@RestController\n@RequestMapping("/api/users")\npublic class UserController {\n\n    /**\n     * Creates a new user in the system.\n     *\n     * @param request the user creation request containing user details\n     * @return ResponseEntity containing the created user response\n     * @throws ValidationException if the request contains invalid data\n     */\n    @PostMapping\n    public ResponseEntity<UserResponse> createUser(@Valid @RequestBody CreateUserRequest request) {\n        // method body\n    }\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"ide-integration",children:"IDE Integration"}),"\n",(0,l.jsx)(n.h3,{id:"intellij-idea",children:"IntelliJ IDEA"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Install Checkstyle Plugin:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"File \u2192 Settings \u2192 Plugins"}),"\n",(0,l.jsx)(n.li,{children:'Search for "CheckStyle-IDEA"'}),"\n",(0,l.jsx)(n.li,{children:"Install and restart"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Configure Plugin:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"File \u2192 Settings \u2192 Tools \u2192 Checkstyle"}),"\n",(0,l.jsxs)(n.li,{children:["Add configuration file: ",(0,l.jsx)(n.code,{children:"config/checkstyle/checkstyle.xml"})]}),"\n",(0,l.jsx)(n.li,{children:"Set as active"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Real-time Checking:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:'Enable "Real-time scan"'}),"\n",(0,l.jsx)(n.li,{children:"Violations will be highlighted in the editor"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"vs-code",children:"VS Code"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Install Extension:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:'Install "Checkstyle for Java" extension'}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Configure:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Set checkstyle configuration file in settings"}),"\n",(0,l.jsx)(n.li,{children:"Enable automatic checking"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"eclipse",children:"Eclipse"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Install Plugin:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Help \u2192 Eclipse Marketplace"}),"\n",(0,l.jsx)(n.li,{children:'Search for "Checkstyle Plug-in"'}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Configure:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Window \u2192 Preferences \u2192 Checkstyle"}),"\n",(0,l.jsx)(n.li,{children:"Add configuration file"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"suppressing-violations",children:"Suppressing Violations"}),"\n",(0,l.jsx)(n.h3,{id:"method-1-suppressions-file",children:"Method 1: Suppressions File"}),"\n",(0,l.jsxs)(n.p,{children:["Add suppressions to ",(0,l.jsx)(n.code,{children:"config/checkstyle/suppressions.xml"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0"?>\n<!DOCTYPE suppressions PUBLIC\n    "-//Checkstyle//DTD SuppressionFilter Configuration 1.2//EN"\n    "https://checkstyle.org/dtds/suppressions_1_2.dtd">\n\n<suppressions>\n    \x3c!-- Suppress LineLength for generated files --\x3e\n    <suppress checks="LineLength" files=".*Generated\\.java"/>\n    \n    \x3c!-- Suppress specific check for specific file --\x3e\n    <suppress checks="MagicNumber" files="Constants.java"/>\n</suppressions>\n'})}),"\n",(0,l.jsx)(n.h3,{id:"method-2-inline-suppressions",children:"Method 2: Inline Suppressions"}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.code,{children:"@SuppressWarnings"})," annotation:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'@SuppressWarnings("checkstyle:LineLength")\npublic void methodWithLongLine() {\n    // This method is exempt from line length checking\n    String veryLongString = "This is a very long string that would normally violate the line length rule but is suppressed";\n}\n'})}),"\n",(0,l.jsx)(n.h3,{id:"method-3-comment-based-suppressions",children:"Method 3: Comment-based Suppressions"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"// CHECKSTYLE:OFF\npublic void methodWithoutChecks() {\n    // Checkstyle is disabled for this method\n}\n// CHECKSTYLE:ON\n"})}),"\n",(0,l.jsx)(n.h2,{id:"customizing-rules",children:"Customizing Rules"}),"\n",(0,l.jsx)(n.h3,{id:"modifying-existing-rules",children:"Modifying Existing Rules"}),"\n",(0,l.jsxs)(n.p,{children:["Edit ",(0,l.jsx)(n.code,{children:"config/checkstyle/checkstyle.xml"}),":"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:'\x3c!-- Increase line length limit --\x3e\n<module name="LineLength">\n    <property name="max" value="140"/>\n    <property name="ignorePattern" value="^package.*|^import.*"/>\n</module>\n\n\x3c!-- Customize method length --\x3e\n<module name="MethodLength">\n    <property name="max" value="100"/>\n    <property name="countEmpty" value="false"/>\n</module>\n'})}),"\n",(0,l.jsx)(n.h3,{id:"adding-new-rules",children:"Adding New Rules"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:'\x3c!-- Add missing switch default check --\x3e\n<module name="MissingSwitchDefault"/>\n\n\x3c!-- Add empty catch block check --\x3e\n<module name="EmptyCatchBlock">\n    <property name="exceptionVariableName" value="expected|ignore"/>\n</module>\n'})}),"\n",(0,l.jsx)(n.h3,{id:"severity-levels",children:"Severity Levels"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:'\x3c!-- Change severity of specific checks --\x3e\n<module name="UnusedImports">\n    <property name="severity" value="warning"/>\n</module>\n\n<module name="LineLength">\n    <property name="severity" value="error"/>\n</module>\n'})}),"\n",(0,l.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,l.jsx)(n.h3,{id:"1-regular-checking",children:"1. Regular Checking"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Run Checkstyle before committing code"}),"\n",(0,l.jsx)(n.li,{children:"Set up pre-commit hooks to run Checkstyle automatically"}),"\n",(0,l.jsx)(n.li,{children:"Include Checkstyle in CI/CD pipeline"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"2-team-consistency",children:"2. Team Consistency"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Ensure all team members use the same configuration"}),"\n",(0,l.jsx)(n.li,{children:"Document any project-specific style decisions"}),"\n",(0,l.jsx)(n.li,{children:"Regular code reviews to catch style issues"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"3-gradual-implementation",children:"3. Gradual Implementation"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Start with basic rules and gradually add more"}),"\n",(0,l.jsx)(n.li,{children:"Fix existing violations incrementally"}),"\n",(0,l.jsx)(n.li,{children:"Focus on critical violations first"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"4-configuration-management",children:"4. Configuration Management"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Keep configuration files in version control"}),"\n",(0,l.jsx)(n.li,{children:"Document any customizations"}),"\n",(0,l.jsx)(n.li,{children:"Review and update rules periodically"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,l.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:'"Configuration file not found"'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'# Solution: Check file path in build.gradle\ncheckstyle {\n    configFile = file("config/checkstyle/checkstyle.xml")\n}\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:'"Too many violations"'})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Temporary solution: Increase limits\ncheckstyle {\n    maxWarnings = 100\n    maxErrors = 50\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:'"False positives"'})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Add specific suppressions"}),"\n",(0,l.jsx)(n.li,{children:"Review and adjust rule configuration"}),"\n",(0,l.jsx)(n.li,{children:"Consider if the rule is appropriate for your project"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"performance-issues",children:"Performance Issues"}),"\n",(0,l.jsx)(n.p,{children:"If Checkstyle is slow:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Exclude unnecessary file patterns"}),"\n",(0,l.jsx)(n.li,{children:"Use suppressions instead of disabling rules entirely"}),"\n",(0,l.jsx)(n.li,{children:"Consider running only on changed files in CI"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"integration-issues",children:"Integration Issues"}),"\n",(0,l.jsx)(n.p,{children:"For CI/CD integration:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Fail build on checkstyle violations\n./gradlew check -PcheckstyleFailOnError=true\n\n# Generate reports without failing build\n./gradlew checkstyleMain checkstyleTest -PcheckstyleIgnoreFailures=true\n"})}),"\n",(0,l.jsx)(n.h2,{id:"continuous-improvement",children:"Continuous Improvement"}),"\n",(0,l.jsx)(n.h3,{id:"metrics-tracking",children:"Metrics Tracking"}),"\n",(0,l.jsx)(n.p,{children:"Monitor checkstyle metrics over time:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Number of violations per build"}),"\n",(0,l.jsx)(n.li,{children:"Most common violation types"}),"\n",(0,l.jsx)(n.li,{children:"Files with most violations"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"regular-reviews",children:"Regular Reviews"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Monthly review of checkstyle configuration"}),"\n",(0,l.jsx)(n.li,{children:"Assess if rules are helping code quality"}),"\n",(0,l.jsx)(n.li,{children:"Update rules based on team feedback"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"tool-evolution",children:"Tool Evolution"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Keep Checkstyle version updated"}),"\n",(0,l.jsx)(n.li,{children:"Review new rules in updates"}),"\n",(0,l.jsx)(n.li,{children:"Adapt configuration as project grows"}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:"This guide should help you effectively use Checkstyle to maintain high code quality standards in the AREA Backend project."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(6540);const l={},r=s.createContext(l);function t(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);