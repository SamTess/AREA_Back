spring.application.name=${SPRING_APPLICATION_NAME:AREA_Back}

# Database Configuration
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=${JPA_DDL_AUTO:none}
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL:false}

# Flyway Configuration
spring.flyway.enabled=${FLYWAY_ENABLED:true}
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=${FLYWAY_BASELINE_ON_MIGRATE:true}

# Server Configuration
server.port=${SERVER_PORT:8080}

# Swagger/OpenAPI Configuration
springdoc.api-docs.enabled=${SWAGGER_ENABLED:true}
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.enabled=${SWAGGER_UI_ENABLED:true}
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true

# Security Configuration
spring.security.user.name=${ADMIN_USERNAME}
spring.security.user.password=${ADMIN_PASSWORD}
spring.security.user.roles=${ADMIN_ROLES:ADMIN}

# Logging Configuration
logging.level.area.server.AREA_Back=${LOG_LEVEL_APP:INFO}
logging.level.org.springframework.web=${LOG_LEVEL_WEB:INFO}
logging.level.org.springframework.security=${LOG_LEVEL_SECURITY:INFO}

# Additional Security Configuration
spring.profiles.active=${SPRING_PROFILES_ACTIVE:default}

# Redis Configuration
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.timeout=${REDIS_TIMEOUT:2000ms}
spring.data.redis.database=${REDIS_DATABASE:0}

# Redis Connection Pool
spring.data.redis.lettuce.pool.max-active=${REDIS_POOL_MAX_ACTIVE:8}
spring.data.redis.lettuce.pool.max-idle=${REDIS_POOL_MAX_IDLE:8}
spring.data.redis.lettuce.pool.min-idle=${REDIS_POOL_MIN_IDLE:0}
spring.data.redis.lettuce.pool.max-wait=${REDIS_POOL_MAX_WAIT:-1ms}

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=${CACHE_TTL:1800000}
spring.cache.redis.cache-null-values=false
spring.cache.redis.use-key-prefix=true
spring.cache.redis.key-prefix=${spring.application.name}:

# GitHub OAuth2 Configuration
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}

# Actuator Configuration for Prometheus
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.prometheus.access=READ_ONLY
management.prometheus.metrics.export.enabled=true

# Redis Stream Configuration
app.redis.stream.stream-name=${REDIS_STREAM_NAME:areas:events}
app.redis.stream.consumer-group=${REDIS_CONSUMER_GROUP:area-processors}
app.redis.stream.consumer-name=${REDIS_CONSUMER_NAME:}
app.redis.stream.batch-size=${REDIS_STREAM_BATCH_SIZE:10}
app.redis.stream.thread-pool-size=${REDIS_STREAM_THREAD_POOL_SIZE:4}
app.redis.stream.poll-timeout-ms=${REDIS_STREAM_POLL_TIMEOUT_MS:100}
# GitHub OAuth2 Configuration
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID:}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET:}

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:}
